name: Build and Deploy to Azure Container Apps

on:
  pull_request:
    branches: [main]

env:
  REGISTRY: ghcr.io
  BACKEND_IMAGE_NAME: ${{ github.repository }}/backend
  FRONTEND_IMAGE_NAME: ${{ github.repository }}/frontend
  POSTGRES_IMAGE_NAME: ${{ github.repository }}/postgres

jobs:
  build-and-push:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write

    steps:
    - name: Checkout repository
      uses: actions/checkout@v4

    - name: Log in to Container Registry
      uses: docker/login-action@v3
      with:
        registry: ${{ env.REGISTRY }}
        username: ${{ github.actor }}
        password: ${{ secrets.GITHUB_TOKEN }}

    - name: Build and push backend image
      uses: docker/build-push-action@v5
      with:
        context: ./backend
        file: ./backend/Booking.Api/Dockerfile
        push: true
        tags: ${{ env.REGISTRY }}/${{ env.BACKEND_IMAGE_NAME }}:latest

    - name: Build and push frontend image
      uses: docker/build-push-action@v5
      with:
        context: ./frontend
        file: ./frontend/Dockerfile
        push: true
        tags: ${{ env.REGISTRY }}/${{ env.FRONTEND_IMAGE_NAME }}:latest

  deploy:
    needs: build-and-push
    if: success()
    runs-on: ubuntu-latest
    permissions:
      id-token: write
      contents: read

    steps:
    - name: Checkout repository
      uses: actions/checkout@v4

    - name: Azure login
      uses: azure/login@v2
      with:
        client-id: ${{ secrets.AZURE_CLIENT_ID }}
        tenant-id: ${{ secrets.AZURE_TENANT_ID }}
        subscription-id: ${{ secrets.AZURE_SUBSCRIPTION_ID }}

    - name: Verify Azure authentication
      run: |
        echo "Testing Azure CLI authentication..."
        az account show --output json
        echo "Checking resource group access..."
        az group show --name ${{ vars.AZURE_RESOURCE_GROUP }} --output json

    - name: Deploy infrastructure with updated images
      run: |
        echo "Starting deployment..."
        # Use what-if to test without consuming response stream
        echo "Running deployment what-if analysis..."
        az deployment group what-if \
          --resource-group ${{ vars.AZURE_RESOURCE_GROUP }} \
          --template-file infrastructure/azure-setup.bicep \
          --parameters namePrefix="pbooking" \
          --parameters location="swedencentral" \
          --parameters backendImage="${{ env.REGISTRY }}/${{ env.BACKEND_IMAGE_NAME }}:latest" \
          --parameters frontendImage="${{ env.REGISTRY }}/${{ env.FRONTEND_IMAGE_NAME }}:latest" \
          --parameters databasePassword="${{ secrets.DB_PASSWORD }}" \
          --parameters userPrincipalId="${{ secrets.USER_PRINCIPAL_ID }}"

        echo "Proceeding with actual deployment..."
        az deployment group create \
          --resource-group ${{ vars.AZURE_RESOURCE_GROUP }} \
          --template-file infrastructure/azure-setup.bicep \
          --parameters namePrefix="pbooking" \
          --parameters location="swedencentral" \
          --parameters backendImage="${{ env.REGISTRY }}/${{ env.BACKEND_IMAGE_NAME }}:latest" \
          --parameters frontendImage="${{ env.REGISTRY }}/${{ env.FRONTEND_IMAGE_NAME }}:latest" \
          --parameters databasePassword="${{ secrets.DB_PASSWORD }}" \
          --parameters userPrincipalId="${{ secrets.USER_PRINCIPAL_ID }}" \
          --output json