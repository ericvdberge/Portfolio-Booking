version: '3.8'

services:
  postgres:
    image: postgres:15-alpine
    container_name: portfolio_booking_postgres
    environment:
      POSTGRES_DB: portfolio_booking
      POSTGRES_USER: booking_user
      POSTGRES_PASSWORD: booking_password
      POSTGRES_INITDB_ARGS: "--locale-provider=libc --locale=en_US.UTF-8"
      LC_ALL: en_US.UTF-8
      LANG: en_US.UTF-8
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./init.sql:/docker-entrypoint-initdb.d/init.sql
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U booking_user -d portfolio_booking"]
      interval: 10s
      timeout: 5s
      retries: 5

  api:
    build:
      context: ./backend
      dockerfile: Booking.Api/Dockerfile
    container_name: portfolio_booking_api
    environment:
      - ASPNETCORE_ENVIRONMENT=Development
      - ConnectionStrings__DefaultConnection=Host=postgres;Database=portfolio_booking;Username=booking_user;Password=booking_password
    ports:
      - "8080:8080"
    depends_on:
      postgres:
        condition: service_healthy
    volumes:
      - ./backend:/app/backend
    restart: unless-stopped

volumes:
  postgres_data: